#include "utils/BigInteger.h"

bool app_utils_test()
{
    if (false)
    {
        BigInteger x = 1, y = 1;
        std::cout << std::setprecision(5);
        do
        {
            x *= 1000;
            y *= 1000000;
            auto restart = std::chrono::high_resolution_clock::now();
            bool correct = (x * x) == y;
            if (correct)
                std::cout << '\r' << std::flush << "mul " << x.tot() << " : " << std::chrono::duration_cast<std::chrono::microseconds>(std::chrono::high_resolution_clock::now() - restart).count() << " us";
            else
            {
                std::cout << "multiplication of " << x.tot() << " is error" << std::endl;
                break;
            }
        } while (x.tot() < 9999);
        std::cout << std::endl;
    }
    if (false)
    {
        std::cout << "test operator" << std::endl;
        bool correct;
        long iC;
        auto restart = std::chrono::high_resolution_clock::now();
        BigInteger x, y;
        iC = 0;
        std::cout << "+=";
        while (!std::chrono::duration_cast<std::chrono::seconds>(std::chrono::high_resolution_clock::now() - restart).count())
        {
            x = BigInteger
            y = BigInteger
            if (gen())
            {
                x = -x;
                y = -y;
            }
            correct = (y += y) == x;
            if (!correct)
                break;
            iC++;
        }
        if (correct)
            std::cout << iC;
        else
            std::cout << "error";
        std::cout << " | ";
        iC = 0;
        std::cout << "-=";
        restart = std::chrono::high_resolution_clock::now();
        while (!std::chrono::duration_cast<std::chrono::seconds>(std::chrono::high_resolution_clock::now() - restart).count())
        {
            x = BigInteger("888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888\0"),
            y = BigInteger("444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444\0");
            if (gen())
            {
                x = -x;
                y = -y;
            }
            correct = (x -= y) == y;
            if (!correct)
                break;
            iC++;
        }
        if (correct)
            std::cout << iC;
        else
            std::cout << "error";
        std::cout << " | ";
        iC = 0;
        std::cout << "*=";
        restart = std::chrono::high_resolution_clock::now();
        while (!std::chrono::duration_cast<std::chrono::seconds>(std::chrono::high_resolution_clock::now() - restart).count())
        {
            x = BigInteger
            y = BigInteger
            if (gen())
                x = -x;
            correct = (x *= x) == y;
            if (!correct)
                break;
            iC++;
        }
        if (correct)
            std::cout << iC;
        else
            std::cout << "error";
        std::cout << " | ";
        iC = 0;
        std::cout << "/=";
        restart = std::chrono::high_resolution_clock::now();
        while (!std::chrono::duration_cast<std::chrono::seconds>(std::chrono::high_resolution_clock::now() - restart).count())
        {
            x = BigInteger
            y = BigInteger
            if (gen())
                x = -x;
            correct = (y /= x) == x;
            if (!correct)
                break;
            iC++;
        }
        if (correct)
            std::cout << iC;
        else
            std::cout << "error";
        std::cout << " | ";
        iC = 0;
        std::cout << "%=";
        restart = std::chrono::high_resolution_clock::now();
        while (!std::chrono::duration_cast<std::chrono::seconds>(std::chrono::high_resolution_clock::now() - restart).count())
        {
            x = BigInteger
            y = BigInteger
            correct = (y %= x) == BigInteger(9);
            if (!correct)
                break;
            iC++;
        }
        if (correct)
            std::cout << iC;
        else
            std::cout << "error";
        std::cout << " | ";
        iC = 0;
        std::cout << ">>=";
        restart = std::chrono::high_resolution_clock::now();
        while (!std::chrono::duration_cast<std::chrono::seconds>(std::chrono::high_resolution_clock::now() - restart).count())
        {
            x = BigInteger("1152921504606846976000000000000000000\0"), y = BigInteger("1000000000000000000\0");
            correct = (x >>= 60) == y;
            if (!correct)
                break;
            iC++;
        }
        if (correct)
            std::cout << iC;
        else
            std::cout << "error";
        std::cout << " | ";
        iC = 0;
        std::cout << "<<=";
        restart = std::chrono::high_resolution_clock::now();
        while (!std::chrono::duration_cast<std::chrono::seconds>(std::chrono::high_resolution_clock::now() - restart).count())
        {
            x = BigInteger("-1000000000000000000\0"), y = BigInteger("-1152921504606846976000000000000000000\0");
            correct = (x <<= 60) == y;
            if (!correct)
                break;
            iC++;
        }
        if (correct)
            std::cout << iC;
        else
            std::cout << "error";
        std::cout << " | ";
        iC = 0;
        std::cout << "+";
        restart = std::chrono::high_resolution_clock::now();
        while (!std::chrono::duration_cast<std::chrono::seconds>(std::chrono::high_resolution_clock::now() - restart).count())
        {
            x = BigInteger
            y = BigInteger
            if (gen())
            {
                x = -x;
                y = -y;
            }
            correct = (y + y) == x;
            if (!correct)
                break;
            iC++;
        }
        if (correct)
            std::cout << iC;
        else
            std::cout << "error";
        std::cout << " | ";
        iC = 0;
        std::cout << "-";
        restart = std::chrono::high_resolution_clock::now();
        while (!std::chrono::duration_cast<std::chrono::seconds>(std::chrono::high_resolution_clock::now() - restart).count())
        {
            x = BigInteger
            y = BigInteger
            if (gen())
            {
                x = -x;
                y = -y;
            }
            correct = (x - y) == y;
            if (!correct)
                break;
            iC++;
        }
        if (correct)
            std::cout << iC;
        else
            std::cout << "error";
        std::cout << " | ";
        iC = 0;
        std::cout << "*";
        restart = std::chrono::high_resolution_clock::now();
        while (!std::chrono::duration_cast<std::chrono::seconds>(std::chrono::high_resolution_clock::now() - restart).count())
        {
            x = BigInteger
            y = BigInteger
            if (gen())
                x = -x;
            correct = (x * x) == y;
            if (!correct)
                break;
            iC++;
        }
        if (correct)
            std::cout << iC;
        else
            std::cout << "error";
        std::cout << " | ";
        iC = 0;
        std::cout << "/";
        restart = std::chrono::high_resolution_clock::now();
        while (!std::chrono::duration_cast<std::chrono::seconds>(std::chrono::high_resolution_clock::now() - restart).count())
        {
            x = BigInteger
            y = BigInteger
            if (gen())
                x = -x;
            correct = (y / x) == x;
            if (!correct)
                break;
            iC++;
        }
        if (correct)
            std::cout << iC;
        else
            std::cout << "error";
        std::cout << " | ";
        iC = 0;
        std::cout << "%";
        restart = std::chrono::high_resolution_clock::now();
        while (!std::chrono::duration_cast<std::chrono::seconds>(std::chrono::high_resolution_clock::now() - restart).count())
        {
            x = BigInteger
            y = BigInteger
            correct = (y % x) == BigInteger(9);
            if (!correct)
                break;
            iC++;
        }
        if (correct)
            std::cout << iC;
        else
            std::cout << "error";
        std::cout << " | ";
        iC = 0;
        std::cout << ">>";
        restart = std::chrono::high_resolution_clock::now();
        while (!std::chrono::duration_cast<std::chrono::seconds>(std::chrono::high_resolution_clock::now() - restart).count())
        {
            x = BigInteger("1152921504606846976000000000000000000\0"), y = BigInteger("1000000000000000000\0");
            correct = (x >> 60) == y;
            if (!correct)
                break;
            iC++;
        }
        if (correct)
            std::cout << iC;
        else
            std::cout << "error";
        std::cout << " | ";
        iC = 0;
        std::cout << "<<";
        restart = std::chrono::high_resolution_clock::now();
        while (!std::chrono::duration_cast<std::chrono::seconds>(std::chrono::high_resolution_clock::now() - restart).count())
        {
            x = BigInteger("1000000000000000000\0"), y = BigInteger("1152921504606846976000000000000000000\0");
            correct = (x << 60) == y;
            if (!correct)
                break;
            iC++;
        }
        if (correct)
            std::cout << iC;
        else
            std::cout << "error";
        std::cout << " | " << std::endl;
    }
}
